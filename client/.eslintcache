[{"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\index.js":"1","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\App.js":"2","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Landing.js":"4","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Home.js":"5","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Signup.js":"6","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Login.js":"7","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\SinglePost.js":"8","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\Footer\\index.js":"10","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\queries.js":"11","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\auth.js":"12","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\mutations.js":"13","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\PostForm\\index.js":"14","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\CommentForm\\index.js":"15","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\CommentList\\index.js":"16","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\PostList\\index.js":"17"},{"size":500,"mtime":1676332835318,"results":"18","hashOfConfig":"19"},{"size":2261,"mtime":1677101729731,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1676332835321,"results":"21","hashOfConfig":"19"},{"size":427,"mtime":1677099006763,"results":"22","hashOfConfig":"19"},{"size":853,"mtime":1677117162501,"results":"23","hashOfConfig":"19"},{"size":2670,"mtime":1677116766639,"results":"24","hashOfConfig":"19"},{"size":2506,"mtime":1677116755121,"results":"25","hashOfConfig":"19"},{"size":1508,"mtime":1677027533324,"results":"26","hashOfConfig":"19"},{"size":1251,"mtime":1677116295461,"results":"27","hashOfConfig":"19"},{"size":613,"mtime":1677113849615,"results":"28","hashOfConfig":"19"},{"size":642,"mtime":1676602397602,"results":"29","hashOfConfig":"19"},{"size":1043,"mtime":1676332835322,"results":"30","hashOfConfig":"19"},{"size":1177,"mtime":1676602397596,"results":"31","hashOfConfig":"19"},{"size":2779,"mtime":1677115077151,"results":"32","hashOfConfig":"19"},{"size":2394,"mtime":1677117131475,"results":"33","hashOfConfig":"19"},{"size":973,"mtime":1677116907299,"results":"34","hashOfConfig":"19"},{"size":952,"mtime":1677027533323,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"o9pvp5",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\index.js",[],["78","79"],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\App.js",["80"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport Particles from \"react-tsparticles\";\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\n\nimport Landing from \"./pages/Landing\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport SinglePost from \"./pages/SinglePost\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\nfunction particlesInit(tsParticles) {\n  console.log(\"init\", tsParticles);\n\n  loadLinksPreset(tsParticles);\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Particles\n        options={{\n          preset: \"links\",\n        }}\n        init={particlesInit}\n      />\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/posts/:postId\" element={<SinglePost />} />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Landing.js",["81","82"],"import React from \"react\";\n\nimport Particles from \"react-tsparticles\";\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\n\nfunction particlesInit(tsParticles) {\n  console.log(\"init\", tsParticles);\n\n  loadLinksPreset(tsParticles);\n}\n\nconst Landing = () => {\n  return (\n    <div>\n      <div>\n        <div>\n          <h1 className=\"hi\">Finally</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Home.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Signup.js",["83"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light c-3 p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p className=\"c-3\">\n                Success! You will now be redirected to the homepage!\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Type a username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter a valid email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter a strong password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\Login.js",["84"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light c-3 p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p className=\"c-3\">\n                Success! You will now be redirected to the homepage!\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Enter your password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\queries.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\auth.js",["85"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\PostForm\\index.js",["86"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_POST } from \"../../utils/mutations\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\n\nconst PostForm = () => {\n  const [postText, setPostText] = useState(\"\");\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setPostText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"postText\" && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3 className=\"c-2\">Post your tech journey here...</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"postText\"\n                placeholder=\"Make a post...\"\n                value={postText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Post\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p className=\"c-3\">\n          You need to be logged in to post. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PostForm;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\CommentForm\\index.js",["87"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_COMMENT } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth\";\n\nconst CommentForm = ({ postId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          postId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"commentText\" && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4 className=\"c-2\">Comments?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p className=\"c-3\">\n          You need to be logged in to comment. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\Cody\\Desktop\\CodingBootcamp\\Tech-R-US\\client\\src\\components\\PostList\\index.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":15},{"ruleId":"92","severity":1,"message":"96","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"97","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":23},{"ruleId":"92","severity":1,"message":"98","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"98","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":41,"column":1,"nodeType":"101","endLine":41,"endColumn":34},{"ruleId":"92","severity":1,"message":"102","line":34,"column":15,"nodeType":"94","messageId":"95","endLine":34,"endColumn":19},{"ruleId":"92","severity":1,"message":"102","line":19,"column":15,"nodeType":"94","messageId":"95","endLine":19,"endColumn":19},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Landing' is defined but never used.","Identifier","unusedVar","'Particles' is defined but never used.","'particlesInit' is defined but never used.","'Link' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]